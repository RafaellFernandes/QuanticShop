-- MySQL Script generated by MySQL Workbench
-- Wed Feb 10 18:25:59 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema quanticshop
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema quanticshop
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `quanticshop` DEFAULT CHARACTER SET utf8 ;
USE `quanticshop` ;

-- -----------------------------------------------------
-- Table `quanticshop`.`cidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`cidade` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cidade` VARCHAR(70) NOT NULL,
  `estado` CHAR(2) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`cliente` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `primeiro_nome` VARCHAR(30) NOT NULL,
  `sobrenome` VARCHAR(60) NOT NULL,
  `cpf` CHAR(15) NOT NULL,
  `data_nascimento` DATE NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `senha` VARCHAR(200) NOT NULL,
  `telefone` CHAR(25) NOT NULL,
  `celular` CHAR(25) NOT NULL,
  `foto` VARCHAR(20) NOT NULL,
  `sexo` VARCHAR(40) NOT NULL,
  `pessoaFJ` ENUM('F', 'J') NOT NULL,
  `nomeFantasia` VARCHAR(150) NULL,
  `razaoSocial` VARCHAR(150) NULL,
  `cnpj` CHAR(20) NULL,
  `inscricao_estadual` VARCHAR(30) NULL,
  `cep` CHAR(10) NOT NULL,
  `estado` VARCHAR(2) NOT NULL,
  `cidade` VARCHAR(60) NOT NULL,
  `endereco` VARCHAR(100) NOT NULL,
  `bairro` VARCHAR(100) NOT NULL,
  `complemento` VARCHAR(50) NOT NULL,
  `numero_resid` VARCHAR(15) NOT NULL,
  `ativo` ENUM('S', 'N') NOT NULL,
  `cidade_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Cliente_Cidade1_idx` (`cidade_id` ASC),
  UNIQUE INDEX `Email_UNIQUE` (`email` ASC),
  CONSTRAINT `fk_Cliente_Cidade1`
    FOREIGN KEY (`cidade_id`)
    REFERENCES `quanticshop`.`cidade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`usuario` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `primeiro_nome` VARCHAR(30) NOT NULL,
  `sobrenome` VARCHAR(60) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `login` VARCHAR(45) NOT NULL,
  `senha` VARCHAR(20) NOT NULL,
  `foto` VARCHAR(20) BINARY NOT NULL,
  `cep` CHAR(10) NULL,
  `cidade` VARCHAR(100) NULL,
  `estado` VARCHAR(2) NULL,
  `endereco` VARCHAR(100) NULL,
  `bairro` VARCHAR(100) NULL,
  `complemento` VARCHAR(45) NULL,
  `numero_resid` VARCHAR(45) NULL,
  `ativo` ENUM('S', 'N') NOT NULL,
  `cidade_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Usuario_Cidade1_idx` (`cidade_id` ASC),
  UNIQUE INDEX `Login_UNIQUE` (`login` ASC),
  CONSTRAINT `fk_Usuario_Cidade1`
    FOREIGN KEY (`cidade_id`)
    REFERENCES `quanticshop`.`cidade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`departamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`departamento` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome_dept` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `NomeDept_UNIQUE` (`nome_dept` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`fornecedor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nomeFantasia` VARCHAR(150) NOT NULL,
  `razaoSocial` VARCHAR(150) NOT NULL,
  `cnpj` CHAR(20) NOT NULL,
  `inscricaoEstadual` VARCHAR(50) NULL,
  `telefone` CHAR(25) NOT NULL,
  `celular` VARCHAR(20) NULL,
  `email` VARCHAR(100) NULL,
  `cep` CHAR(10) NOT NULL,
  `estado` VARCHAR(2) NOT NULL,
  `cidade` VARCHAR(100) NOT NULL,
  `endereco` VARCHAR(100) NOT NULL,
  `bairro` VARCHAR(100) NOT NULL,
  `complemento` VARCHAR(100) NULL,
  `numero_resid` VARCHAR(10) NOT NULL,
  `ativo` ENUM('S', 'N') NOT NULL,
  `cidade_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Fornecedor_Cidade1_idx` (`cidade_id` ASC),
  CONSTRAINT `fk_Fornecedor_Cidade1`
    FOREIGN KEY (`cidade_id`)
    REFERENCES `quanticshop`.`cidade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`transportadora`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`transportadora` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nomeFantasia` VARCHAR(150) NOT NULL,
  `razaoSocial` VARCHAR(150) NOT NULL,
  `cnpj` CHAR(20) NOT NULL,
  `inscricaoEstadual` VARCHAR(50) NULL,
  `telefone` CHAR(20) NOT NULL,
  `celular` VARCHAR(45) NULL,
  `email` VARCHAR(100) NULL,
  `cep` CHAR(15) NOT NULL,
  `estado` VARCHAR(2) NOT NULL,
  `cidade` VARCHAR(100) NOT NULL,
  `endereco` VARCHAR(70) NOT NULL,
  `bairro` VARCHAR(100) NOT NULL,
  `numero_resid` VARCHAR(20) NOT NULL,
  `ativo` ENUM('S', 'N') NOT NULL,
  `cidade_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Transportadora_Cidade1_idx` (`cidade_id` ASC),
  CONSTRAINT `fk_Transportadora_Cidade1`
    FOREIGN KEY (`cidade_id`)
    REFERENCES `quanticshop`.`cidade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`tipopagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`tipopagamento` (
  `id` INT NOT NULL,
  `tipo_pagto` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`entrega` (
  `id` INT NOT NULL,
  `previsto_para` DATE NULL,
  `cod_status` INT NOT NULL,
  `data_status` TIMESTAMP NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`situacao_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`situacao_pedido` (
  `id` INT NOT NULL,
  `descricao` VARCHAR(50) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`pedido` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `data_emissao` DATE NOT NULL,
  `historico_pedido` VARCHAR(100) NOT NULL,
  `valorTotal` DECIMAL NOT NULL,
  `endereco_cobranca` VARCHAR(100) NOT NULL,
  `endereco_entrega` VARCHAR(100) NOT NULL,
  `qtd_produto` INT NOT NULL,
  `valorUnitario` DECIMAL NOT NULL,
  `desconto` DECIMAL NOT NULL,
  `transportadora_id` INT NOT NULL,
  `tipopagamento_id` INT NOT NULL,
  `cliente_id` INT NOT NULL,
  `entrega_id` INT NOT NULL,
  `situacao_pedido_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Pedido_Transportadora1_idx` (`transportadora_id` ASC),
  INDEX `fk_Pedido_Cliente1_idx` (`cliente_id` ASC),
  INDEX `fk_Pedido_tipopagamento1_idx` (`tipopagamento_id` ASC),
  INDEX `fk_Pedido_entrega1_idx` (`entrega_id` ASC),
  INDEX `fk_Pedido_situacao_pedido1_idx` (`situacao_pedido_id` ASC),
  CONSTRAINT `fk_Pedido_Transportadora1`
    FOREIGN KEY (`transportadora_id`)
    REFERENCES `quanticshop`.`transportadora` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pedido_Cliente1`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `quanticshop`.`cliente` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pedido_tipopagamento1`
    FOREIGN KEY (`tipopagamento_id`)
    REFERENCES `quanticshop`.`tipopagamento` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pedido_entrega1`
    FOREIGN KEY (`entrega_id`)
    REFERENCES `quanticshop`.`entrega` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pedido_situacao_pedido1`
    FOREIGN KEY (`situacao_pedido_id`)
    REFERENCES `quanticshop`.`situacao_pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`marca`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`marca` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome_marca` VARCHAR(45) NOT NULL,
  `ativo` ENUM('S', 'N') NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`produto` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome_produto` VARCHAR(50) NOT NULL,
  `codigo` INT NOT NULL,
  `valor_unitario` FLOAT NOT NULL,
  `descricao` TEXT NOT NULL,
  `espec_tecnica` TEXT NOT NULL,
  `foto` VARCHAR(45) NOT NULL,
  `qtd_estoque` INT NOT NULL,
  `quantidade_minima_estoque` INT NOT NULL,
  `ativo` ENUM('S', 'N') NOT NULL,
  `marca_id` INT NOT NULL,
  `departamento_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Produto_Marca1_idx` (`marca_id` ASC),
  INDEX `fk_Produto_departamento1_idx` (`departamento_id` ASC),
  CONSTRAINT `fk_Produto_Marca1`
    FOREIGN KEY (`marca_id`)
    REFERENCES `quanticshop`.`marca` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Produto_departamento1`
    FOREIGN KEY (`departamento_id`)
    REFERENCES `quanticshop`.`departamento` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`Item_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`Item_pedido` (
  `id` INT NOT NULL,
  `pedido_id` INT NOT NULL,
  `produto_id` INT NOT NULL,
  `quantidade` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Pedido_has_Produto_Produto1_idx` (`produto_id` ASC),
  INDEX `fk_Pedido_has_Produto_Pedido_idx` (`pedido_id` ASC),
  CONSTRAINT `fk_Pedido_has_Produto_Pedido`
    FOREIGN KEY (`pedido_id`)
    REFERENCES `quanticshop`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pedido_has_Produto_Produto1`
    FOREIGN KEY (`produto_id`)
    REFERENCES `quanticshop`.`produto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`fornecedor_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`fornecedor_produto` (
  `id` INT NOT NULL,
  `produto_id` INT NOT NULL,
  `fornecedor_id` INT NOT NULL,
  INDEX `fk_Produto_has_Fornecedor_Fornecedor1_idx` (`fornecedor_id` ASC),
  INDEX `fk_Produto_has_Fornecedor_Produto1_idx` (`produto_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Produto_has_Fornecedor_Produto1`
    FOREIGN KEY (`produto_id`)
    REFERENCES `quanticshop`.`produto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Produto_has_Fornecedor_Fornecedor1`
    FOREIGN KEY (`fornecedor_id`)
    REFERENCES `quanticshop`.`fornecedor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`status` (
  `id` INT NOT NULL,
  `descricao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`rastreio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`rastreio` (
  `id` INT NOT NULL,
  `codigo` INT NOT NULL,
  `descricao_produto` TEXT NOT NULL,
  `data_status` TIMESTAMP NOT NULL,
  `geo_lat` VARCHAR(15) NULL,
  `geo_long` VARCHAR(15) NULL,
  `status_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_rastreio_status1_idx` (`status_id` ASC),
  CONSTRAINT `fk_rastreio_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `quanticshop`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`pedido_rastreio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`pedido_rastreio` (
  `pedido_id` INT NOT NULL,
  `rastreio_id` INT NOT NULL,
  `id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Pedido_has_rastreio_rastreio1_idx` (`rastreio_id` ASC),
  INDEX `fk_Pedido_has_rastreio_Pedido1_idx` (`pedido_id` ASC),
  CONSTRAINT `fk_Pedido_has_rastreio_Pedido1`
    FOREIGN KEY (`pedido_id`)
    REFERENCES `quanticshop`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pedido_has_rastreio_rastreio1`
    FOREIGN KEY (`rastreio_id`)
    REFERENCES `quanticshop`.`rastreio` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quanticshop`.`produto_saldo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quanticshop`.`produto_saldo` (
  `id` INT NOT NULL,
  `qtd_disponivel` INT NOT NULL,
  `qtd_receber` INT NOT NULL,
  `produto_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_produto_saldo_Produto1_idx` (`produto_id` ASC),
  CONSTRAINT `fk_produto_saldo_Produto1`
    FOREIGN KEY (`produto_id`)
    REFERENCES `quanticshop`.`produto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
